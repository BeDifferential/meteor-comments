{"version":3,"file":"/packages/comments.js","sources":["comments/client/views/comments/_comments.html","comments/client/views/comments/_comments.coffee","comments/client/views/unreadWidget/_unreadWidget.html","comments/client/views/unreadWidget/_unreadWidget.coffee","comments/collections/comments.coffee"],"names":[],"mappings":"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","sourcesContent":["Template.__define__(\"_comments\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"comments\\\">\\n    <h3>Comments</h3>\\n    <ul class=\\\"list-group\\\">\\n      \",[\"#\",[[0,\"each\"],[0,\"comments\"]],[\"\\n        <li class=\\\"list-group-item\\\">\\n          <p>\\n            \",[\"#\",[[0,\"markdown\"]],[[\"{\",[[0,\"comment\"]]]]],\"\\n          </p>\\n          <p class=\\\"text-muted\\\">\\n            - \",[\"{\",[[0,\"username\"]]],\" (\",[\"{\",[[0,\"commentDate\"],[0,\"createdAt\"]]],\")\\n          </p>\\n        </li>\\n      \"],[\"\\n        <li class=\\\"list-group-item\\\">No comments... yet</li>\\n      \"]],\"\\n    </ul>\\n    \",[\"#\",[[0,\"if\"],[0,\"currentUser\"]],[\"\\n      <div class=\\\"form-group editor-group\\\">\\n        \\n        <div id=\\\"preview\\\" class=\\\"\",[\"#\",[[0,\"unless\"],[0,\"previewing\"]],[\"hide\"]],\"\\\">\\n          \",[\"#\",[[0,\"markdown\"]],[[\"{\",[[0,\"newComment\"]]]]],\"\\n        </div>\\n\\n        <div id=\\\"editor-wrapper\\\" class=\\\"\",[\"#\",[[0,\"if\"],[0,\"previewing\"]],[\"hide\"]],\"\\\">\\n        \",[\"#\",[[0,\"constant\"]],[\"\\n          <div id=\\\"editor\\\"></div>\\n        \"]],\"\\n        </div>\\n\\n        <button class=\\\"toggle-preview\\\">\\n          \",[\"#\",[[0,\"if\"],[0,\"previewing\"]],[\"\\n            <i class=\\\"fa fa-eye-slash icon-eye-close\\\"></i>\\n          \"],[\"\\n            <i class=\\\"fa fa-eye icon-eye-open\\\"></i>\\n          \"]],\"\\n        </button>\\n\\n        <span class=\\\"text-muted pull-right hint\\\">\\n          <strong>Hint:</strong> you can use \\n          <a target=\\\"_blank\\\" href=\\\"http://daringfireball.net/projects/markdown/syntax\\\">markdown</a> to enhance your comments!\\n        </span>\\n\\n        <button class=\\\"btn btn-primary add-comment\\\">\\n          <i class=\\\"fa fa-comment icon-comment\\\"></i> Comment\\n        </button>\\n      \\n      </div>\\n    \"],[\"\\n      <div class=\\\"alert alert-warning\\\">\\n        You must be logged in to comment!\\n      </div>\\n    \"]],\"\\n  </div>\"]));\n","Handlebars.registerHelper \"commentDate\", (date) ->\n  if date\n    dateObj = new Date(date)\n    return $.timeago(dateObj)\n  \"some time ago\"\n\nEditor = {}\n\nTemplate._comments.created = ->\n  Session.set 'comments.new.value', ''\n  Session.set 'comments.new.previewing', false\n\n#\n#  Commenting Widget\n#\nTemplate._comments.rendered = ->\n  commentable = @data\n  _.each commentable.comments(), (comment) ->\n    comment.clearNotification()\n\n    Editor = ace.edit 'editor'\n    Editor.setTheme 'ace/theme/chrome'\n    Editor.getSession().setMode 'ace/mode/markdown'\n    Editor.setFontSize 16\n    Editor.renderer.setShowPrintMargin false\n    Editor.renderer.setShowGutter false\n    Editor.setHighlightActiveLine true\n    Editor.on 'change', (e) ->\n      Session.set 'comments.new.value', Editor.getValue()\n\n  $('.toggle-preview').tooltip title: 'Click to toggle markdown preview mode.'\n    \nTemplate._comments.helpers\n  comments: ->\n    @comments()\n\n  newComment: ->\n    Session.get 'comments.new.value'\n\n  previewing: ->\n    Session.get 'comments.new.previewing'\n\nTemplate._comments.events\n  'click .toggle-preview': (e) ->\n    preview = Session.get 'comments.new.previewing'\n    preview = !preview\n    Session.set 'comments.new.previewing', preview\n\n  'click .add-comment': (e) ->\n    comment = \n      associationId: @id\n      userId: Meteor.userId()\n      username: Meteor.user().username || Meteor.user().emails[0].address\n      comment: Session.get 'comments.new.value'\n      path: Router.current().path\n      notify: []\n      tags: []\n\n    # Allow custom modification\n    comment = @before_comment comment\n\n    # Add every other commentor above to notify list\n    _.each @comments(), (e) ->\n      comment.notify.push e.userId\n\n    # Remove duplicates\n    comment.notify = _.uniq comment.notify\n\n    # Remove this user\n    comment.notify = _.reject comment.notify, (e) ->\n      e is Meteor.userId()\n\n    # Add the comment\n    Comment.create comment\n\n    # Clear values\n    Session.set('comments.new.value', '')\n    Editor.setValue('')","Template.__define__(\"_unreadWidget\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"btn-group unread-widget\\\">\\n    <button type=\\\"button\\\" \\n            class=\\\"btn btn-default dropdown-toggle comments-btn\\\"\\n            \",[\"#\",[[0,\"unless\"],[0,\"count\"]],[\" disabled \"]],\" \\n            data-toggle=\\\"dropdown\\\">\\n      <i class=\\\"fa fa-comment icon-comment\\\"></i>\\n      <span class=\\\"label \",[\"{\",[[0,\"countLabelClass\"]]],\" unread-count\\\">\",[\"{\",[[0,\"count\"]]],\"</span>\\n      <i class=\\\"fa fa-caret-down icon-caret-down\\\"></i>\\n    </button>\\n    <ul class=\\\"dropdown-menu comments-dropdown pull-\",[\"{\",[[0,\"align\"]]],\"\\\" role=\\\"menu\\\">\\n      <li>\\n        <a href=\\\"#\\\" class=\\\"clear-comments\\\">\\n          Clear All <i class=\\\"fa fa-times icon-remove pull-right\\\"></i>\\n        </a>\\n      </li>\\n      \",[\"#\",[[0,\"each\"],[0,\"unreadComments\"]],[\"\\n        <li id=\\\"\",[\"{\",[[0,\"id\"]]],\"\\\" class=\\\"comment\\\">\\n          <a href=\\\"\",[\"{\",[[0,\"path\"]]],\"\\\">\\n            \",[\"{\",[[0,\"commentPreview\"]]],\"\\n            <br>\\n            - \",[\"{\",[[0,\"username\"]]],\" (\",[\"{\",[[0,\"commentDate\"],[0,\"createdAt\"]]],\")\\n          </a>\\n        </li>\\n      \"]],\"\\n    </ul>\\n  </div>\"]));\n","#\n#  Unread Widget\n#\ngetOpts = ->\n  defaults =\n    tags: []\n    align: 'left'\n  opts = Session.get 'comments.unread.options'\n  _.extend defaults, opts\n\nTemplate._unreadWidget.rendered = ->\n  # Set options hash\n  Session.set 'comments.unread.options', @data\n\n  # Set the width of the dropdown to the computed value so the slide works correctly\n  $('.unread-widget').on 'shown.bs.dropdown', (e) ->\n    $('.comments-dropdown').css 'width', $('.comments-dropdown').width()\n\nTemplate._unreadWidget.helpers\n  count: ->\n    Comment.unread(getOpts().tags).length\n\n  countLabelClass: ->\n    if Comment.unread(getOpts().tags).length > 0 then 'label-danger' else 'label-default'\n\n  unreadComments: ->\n    Comment.unread(getOpts().tags)\n\n  align: ->\n    getOpts().align\n\nTemplate._unreadWidget.events  \n  'click .clear-comments': (e) ->\n    e.preventDefault()\n    e.stopPropagation()\n    \n    count = Comment.unread(getOpts().tags).length\n\n    $('.comments-dropdown li.comment').each (i, e) ->\n      # Slide each item out to right\n      $e = $(e)\n      $e.delay(i*80).animate\n        marginLeft: (if parseInt($e.css(\"marginLeft\"), 10) is 0 then $e.outerWidth() else 0)\n      , ->\n        # After the last one slides out, slide the menu up to close\n        if i+1 is count\n          $('.comments-dropdown').slideUp 300, ->\n            # Finally, actually clear the notification in the database\n            _.each Comment.unread(getOpts().tags), (comment) ->\n              comment.clearNotification()","class Commentable extends Minimongoid\n  \n  # Go ahead and autosubscribe to the associated comments\n  constructor: (attr = {}, parent = null) ->\n    super(attr, parent)\n    if Meteor.subscribe then Meteor.subscribe 'comments', @id\n\n  @has_many: [\n    {name: 'comments', foreign_key: 'associationId'}\n  ]\n\n  before_comment: (comment) ->\n    comment\n    \nclass Comment extends Minimongoid\n  @_collection = new Meteor.Collection 'comments'\n\n  @unread: (tags) ->\n    # Grab all for current user\n    selection = \n      notify:\n        $in: [Meteor.userId()]\n    \n    # Filter down using tags\n    if tags && _.isArray(tags) && tags.length > 0\n      selection.tags = \n        $in: tags\n\n    @where selection\n\n  clearNotification: ->\n    @pull notify: Meteor.userId()\n\n  commentPreview: ->\n    @comment.substring(0, 20) + '...'"]}