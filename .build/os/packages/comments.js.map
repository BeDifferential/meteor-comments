{"version":3,"file":"/packages/comments.js","sources":["comments/server/publications.coffee","comments/collections/comments.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,CAAO,CAAoB,IAArB,CAAN,EAA4B,CAA5B,GAA2B;CACjB,GAAR,GAAO,EAAP;CACE,CAAe,EAAf;EACA,EAFF;CAEE,CACE,EADF;CACE,CAAW,IAAX;KADF;CAHuB,GACzB;CADyB;;AAM3B,CANA,CAMiC,IAA3B,CAAN,EAAiC,OAAjC;CACU,GAAR,GAAO,EAAP;CAAa,CAAW,EAAV;CAAU,CAAO,CAAL,CAAO,EAAP;KAAb;CADkB,GAC/B;CAD+B;A;;;;;;;;;;;;;;;;;;ACNjC;;;;AAAM,CAAN;CAGE;;CAAa,oBAAC;;GAAO,GAAP;KACZ;;GADgC,GAAT;KACvB;EAAY,EAAZ,yCAAM;CACN,KAAS,GAAT;CAAyB,CAA6B,EAAC,EAA9B;KAFd;CAAb,EAAa;;CAAb,CAIA,CAAW,KAAX,GAAC;KACC;EAAO,EAAN,MAAD;EAAgC,IAAb,SAAnB;KADS;CAJX;;GAQgB,MAAC,KAAjB;CAAgB,UACd;CATF,EAQgB;;CARhB;;CAHwB;;AAcpB,CAdN;CAeE;;;;;;;GAAmB,GAAM,CAAxB,GAAkB,CAAnB;;EAEA,CAAS,GAAT,CAAC,EAAS;CAER;GACE,CADF;CACE,CACE,IADF;CACE,CAAK,CAAL,GAAY,EAAZ;OADF;CADF;CAKA,EAA4C,CAA5C,EAA8B,CAAnB;CACT,EACE,CADF,KAAS;CACP,CAAK,CAAL;CAFJ,OACE;KANF;CASC,IAAD;CAbF,EAES;;CAFT,EAemB,cAAnB;CACG,UAAD;CAAM,CAAQ,IAAR;CADW,KACjB;CAhBF,EAemB;;CAfnB,EAkBgB,WAAhB;CACG,CAAqB,CAAM,CAA3B,GAAO,EAAR;CAnBF,EAkBgB;;CAlBhB;;CADoB;A","sourcesContent":["Meteor.publish 'comments', (associationId) ->\n  Comment.find\n    associationId: associationId\n  , sort:\n      createdAt: 1\n\nMeteor.publish 'unreadComments', ->\n  Comment.find({'notify': { $in: [@userId]}})","class Commentable extends Minimongoid\n  \n  # Go ahead and autosubscribe to the associated comments\n  constructor: (attr = {}, parent = null) ->\n    super(attr, parent)\n    if Meteor.subscribe then Meteor.subscribe 'comments', @id\n\n  @has_many: [\n    {name: 'comments', foreign_key: 'associationId'}\n  ]\n\n  before_comment: (comment) ->\n    comment\n    \nclass Comment extends Minimongoid\n  @_collection = new Meteor.Collection 'comments'\n\n  @unread: (tags) ->\n    # Grab all for current user\n    selection = \n      notify:\n        $in: [Meteor.userId()]\n    \n    # Filter down using tags\n    if tags && _.isArray(tags) && tags.length > 0\n      selection.tags = \n        $in: tags\n\n    @where selection\n\n  clearNotification: ->\n    @pull notify: Meteor.userId()\n\n  commentPreview: ->\n    @comment.substring(0, 20) + '...'"]}